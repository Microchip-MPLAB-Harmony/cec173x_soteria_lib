/*******************************************************************************
  ECIA PLIB Header

  Company:
    Microchip Technology Inc.

  File Name:
    plib_ecia.h

  Summary:
    ECIA PLIB Header File

  Description:
    None

*******************************************************************************/

/*******************************************************************************
* Copyright (C) 2018 Microchip Technology Inc. and its subsidiaries.
*
* Subject to your compliance with these terms, you may use Microchip software
* and any derivatives exclusively with Microchip products. It is your
* responsibility to comply with third party license terms applicable to your
* use of third party software (including open source software) that may
* accompany Microchip software.
*
* THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
* EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
* WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
* PARTICULAR PURPOSE.
*
* IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
* INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
* WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
* BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
* FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
* ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
* THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
*******************************************************************************/

#ifndef PLIB_ECIA_H
#define PLIB_ECIA_H

#include <stddef.h>
#include <stdbool.h>

// DOM-IGNORE-BEGIN
#ifdef __cplusplus  // Provide C++ Compatibility

    extern "C" {

#endif
// DOM-IGNORE-END

typedef enum
{
    ECIA_AGG_INT_SRC_GPIO140 = 0x0,
	
ECIA_AGG_INT_SRC_GPIO143 = 0x3000000,
	
ECIA_AGG_INT_SRC_GPIO144 = 0x4000000,
	
ECIA_AGG_INT_SRC_GPIO145 = 0x5000000,
	
ECIA_AGG_INT_SRC_GPIO146 = 0x6000000,
	
ECIA_AGG_INT_SRC_GPIO147 = 0x7000000,
	
ECIA_AGG_INT_SRC_GPIO150 = 0x8000000,
	
ECIA_AGG_INT_SRC_GPIO156 = 0xe000000,
	
ECIA_AGG_INT_SRC_GPIO157 = 0xf000000,
	
ECIA_AGG_INT_SRC_GPIO163 = 0x13000000,
	
ECIA_AGG_INT_SRC_GPIO165 = 0x15000000,
	
ECIA_AGG_INT_SRC_GPIO166 = 0x16000000,
	
ECIA_AGG_INT_SRC_GPIO170 = 0x18000000,
	
ECIA_AGG_INT_SRC_GPIO171 = 0x19000000,
	
ECIA_AGG_INT_SRC_GPIO104 = 0x4010100,
	
ECIA_AGG_INT_SRC_GPIO105 = 0x5010100,
	
ECIA_AGG_INT_SRC_GPIO106 = 0x6010100,
	
ECIA_AGG_INT_SRC_GPIO107 = 0x7010100,
	
ECIA_AGG_INT_SRC_GPIO112 = 0xa010100,
	
ECIA_AGG_INT_SRC_GPIO113 = 0xb010100,
	
ECIA_AGG_INT_SRC_GPIO120 = 0x10010100,
	
ECIA_AGG_INT_SRC_GPIO121 = 0x11010100,
	
ECIA_AGG_INT_SRC_GPIO122 = 0x12010100,
	
ECIA_AGG_INT_SRC_GPIO123 = 0x13010100,
	
ECIA_AGG_INT_SRC_GPIO124 = 0x14010100,
	
ECIA_AGG_INT_SRC_GPIO125 = 0x15010100,
	
ECIA_AGG_INT_SRC_GPIO126 = 0x16010100,
	
ECIA_AGG_INT_SRC_GPIO127 = 0x17010100,
	
ECIA_AGG_INT_SRC_GPIO130 = 0x18010100,
	
ECIA_AGG_INT_SRC_GPIO131 = 0x19010100,
	
ECIA_AGG_INT_SRC_GPIO132 = 0x1a010100,
	
ECIA_AGG_INT_SRC_GPIO045 = 0x5020200,
	
ECIA_AGG_INT_SRC_GPIO046 = 0x6020200,
	
ECIA_AGG_INT_SRC_GPIO047 = 0x7020200,
	
ECIA_AGG_INT_SRC_GPIO050 = 0x8020200,
	
ECIA_AGG_INT_SRC_GPIO053 = 0xb020200,
	
ECIA_AGG_INT_SRC_GPIO055 = 0xd020200,
	
ECIA_AGG_INT_SRC_GPIO056 = 0xe020200,
	
ECIA_AGG_INT_SRC_GPIO057 = 0xf020200,
	
ECIA_AGG_INT_SRC_GPIO063 = 0x13020200,
	
ECIA_AGG_INT_SRC_GPIO070 = 0x18020200,
	
ECIA_AGG_INT_SRC_GPIO071 = 0x19020200,
	
ECIA_AGG_INT_SRC_GPIO000 = 0x30300,
	
ECIA_AGG_INT_SRC_GPIO002 = 0x2030300,
	
ECIA_AGG_INT_SRC_GPIO003 = 0x3030300,
	
ECIA_AGG_INT_SRC_GPIO004 = 0x4030300,
	
ECIA_AGG_INT_SRC_GPIO012 = 0xa030300,
	
ECIA_AGG_INT_SRC_GPIO013 = 0xb030300,
	
ECIA_AGG_INT_SRC_GPIO015 = 0xd030300,
	
ECIA_AGG_INT_SRC_GPIO016 = 0xe030300,
	
ECIA_AGG_INT_SRC_GPIO020 = 0x10030300,
	
ECIA_AGG_INT_SRC_GPIO021 = 0x11030300,
	
ECIA_AGG_INT_SRC_GPIO022 = 0x12030300,
	
ECIA_AGG_INT_SRC_GPIO023 = 0x13030300,
	
ECIA_AGG_INT_SRC_GPIO024 = 0x14030300,
	
ECIA_AGG_INT_SRC_GPIO026 = 0x16030300,
	
ECIA_AGG_INT_SRC_GPIO027 = 0x17030300,
	
ECIA_AGG_INT_SRC_GPIO030 = 0x18030300,
	
ECIA_AGG_INT_SRC_GPIO031 = 0x19030300,
	
ECIA_AGG_INT_SRC_GPIO032 = 0x1a030300,
	
ECIA_AGG_INT_SRC_GPIO033 = 0x1b030300,
	
ECIA_AGG_INT_SRC_GPIO034 = 0x1c030300,
	
ECIA_AGG_INT_SRC_GPIO200 = 0x40400,
	
ECIA_AGG_INT_SRC_GPIO201 = 0x1040400,
	
ECIA_AGG_INT_SRC_GPIO202 = 0x2040400,
	
ECIA_AGG_INT_SRC_GPIO203 = 0x3040400,
	
ECIA_AGG_INT_SRC_GPIO204 = 0x4040400,
	
ECIA_AGG_INT_SRC_GPIO223 = 0x13040400,
	
ECIA_AGG_INT_SRC_GPIO224 = 0x14040400,
	
ECIA_AGG_INT_SRC_GPIO227 = 0x17040400,
	
ECIA_AGG_INT_SRC_I2CSMB0 = 0x50514,
	
ECIA_DIR_INT_SRC_I2CSMB0 = 0x80050514L,
	
ECIA_AGG_INT_SRC_I2CSMB1 = 0x1050515,
	
ECIA_DIR_INT_SRC_I2CSMB1 = 0x81050515L,
	
ECIA_AGG_INT_SRC_I2CSMB2 = 0x2050516,
	
ECIA_DIR_INT_SRC_I2CSMB2 = 0x82050516L,
	
ECIA_AGG_INT_SRC_I2CSMB3 = 0x3050517,
	
ECIA_DIR_INT_SRC_I2CSMB3 = 0x83050517L,
	
ECIA_AGG_INT_SRC_I2CSMB4 = 0x405059e,
	
ECIA_DIR_INT_SRC_I2CSMB4 = 0x8405059eL,
	
ECIA_AGG_INT_SRC_DMA_CH00 = 0x60618,
	
ECIA_DIR_INT_SRC_DMA_CH00 = 0x80060618L,
	
ECIA_AGG_INT_SRC_DMA_CH01 = 0x1060619,
	
ECIA_DIR_INT_SRC_DMA_CH01 = 0x81060619L,
	
ECIA_AGG_INT_SRC_DMA_CH02 = 0x206061a,
	
ECIA_DIR_INT_SRC_DMA_CH02 = 0x8206061aL,
	
ECIA_AGG_INT_SRC_DMA_CH03 = 0x306061b,
	
ECIA_DIR_INT_SRC_DMA_CH03 = 0x8306061bL,
	
ECIA_AGG_INT_SRC_DMA_CH04 = 0x406061c,
	
ECIA_DIR_INT_SRC_DMA_CH04 = 0x8406061cL,
	
ECIA_AGG_INT_SRC_DMA_CH05 = 0x506061d,
	
ECIA_DIR_INT_SRC_DMA_CH05 = 0x8506061dL,
	
ECIA_AGG_INT_SRC_DMA_CH06 = 0x606061e,
	
ECIA_DIR_INT_SRC_DMA_CH06 = 0x8606061eL,
	
ECIA_AGG_INT_SRC_DMA_CH07 = 0x706061f,
	
ECIA_DIR_INT_SRC_DMA_CH07 = 0x8706061fL,
	
ECIA_AGG_INT_SRC_DMA_CH08 = 0x8060620,
	
ECIA_DIR_INT_SRC_DMA_CH08 = 0x88060620L,
	
ECIA_AGG_INT_SRC_DMA_CH09 = 0x9060621,
	
ECIA_DIR_INT_SRC_DMA_CH09 = 0x89060621L,
	
ECIA_AGG_INT_SRC_UART0 = 0x70728,
	
ECIA_DIR_INT_SRC_UART0 = 0x80070728L,
	
ECIA_AGG_INT_SRC_PKE_ERR = 0x80841,
	
ECIA_DIR_INT_SRC_PKE_ERR = 0x80080841L,
	
ECIA_AGG_INT_SRC_PKE_END = 0x1080842,
	
ECIA_DIR_INT_SRC_PKE_END = 0x81080842L,
	
ECIA_AGG_INT_SRC_RNG = 0x2080843,
	
ECIA_DIR_INT_SRC_RNG = 0x82080843L,
	
ECIA_AGG_INT_SRC_AES = 0x3080844,
	
ECIA_DIR_INT_SRC_AES = 0x83080844L,
	
ECIA_AGG_INT_SRC_HASH = 0x4080845,
	
ECIA_DIR_INT_SRC_HASH = 0x84080845L,
	
ECIA_AGG_INT_SRC_LED0 = 0xd090953,
	
ECIA_DIR_INT_SRC_LED0 = 0x8d090953L,
	
ECIA_AGG_INT_SRC_LED1 = 0xe090954,
	
ECIA_DIR_INT_SRC_LED1 = 0x8e090954L,
	
ECIA_AGG_INT_SRC_SPT0 = 0xa0a5a,
	
ECIA_DIR_INT_SRC_SPT0 = 0x800a0a5aL,
	
ECIA_AGG_INT_SRC_QMSPI0 = 0x10a0a5b,
	
ECIA_DIR_INT_SRC_QMSPI0 = 0x810a0a5bL,
	
ECIA_AGG_INT_SRC_QMSPI1 = 0x20a0a5c,
	
ECIA_DIR_INT_SRC_QMSPI1 = 0x820a0a5cL,
	
ECIA_AGG_INT_SRC_SPT1 = 0x120a0abb,
	
ECIA_DIR_INT_SRC_SPT1 = 0x920a0abbL,
	
ECIA_AGG_INT_SRC_CCT = 0x140a0a92,
	
ECIA_DIR_INT_SRC_CCT = 0x940a0a92L,
	
ECIA_AGG_INT_SRC_CCT_CAP0 = 0x150a0a93,
	
ECIA_DIR_INT_SRC_CCT_CAP0 = 0x950a0a93L,
	
ECIA_AGG_INT_SRC_CCT_CAP1 = 0x160a0a94,
	
ECIA_DIR_INT_SRC_CCT_CAP1 = 0x960a0a94L,
	
ECIA_AGG_INT_SRC_CCT_CAP2 = 0x170a0a95,
	
ECIA_DIR_INT_SRC_CCT_CAP2 = 0x970a0a95L,
	
ECIA_AGG_INT_SRC_CCT_CAP3 = 0x180a0a96,
	
ECIA_DIR_INT_SRC_CCT_CAP3 = 0x980a0a96L,
	
ECIA_AGG_INT_SRC_CCT_CAP4 = 0x190a0a97,
	
ECIA_DIR_INT_SRC_CCT_CAP4 = 0x990a0a97L,
	
ECIA_AGG_INT_SRC_CCT_CAP5 = 0x1a0a0a98,
	
ECIA_DIR_INT_SRC_CCT_CAP5 = 0x9a0a0a98L,
	
ECIA_AGG_INT_SRC_CCT_CMP0 = 0x1b0a0a99,
	
ECIA_DIR_INT_SRC_CCT_CMP0 = 0x9b0a0a99L,
	
ECIA_AGG_INT_SRC_CCT_CMP1 = 0x1c0a0a9a,
	
ECIA_DIR_INT_SRC_CCT_CMP1 = 0x9c0a0a9aL,
	
ECIA_AGG_INT_SRC_IMSPI = 0x80c0cb9,
	
ECIA_DIR_INT_SRC_IMSPI = 0x880c0cb9L,
	
ECIA_AGG_INT_SRC_CLK_MON = 0x90c0cae,
	
ECIA_DIR_INT_SRC_CLK_MON = 0x890c0caeL,
	
ECIA_AGG_INT_SRC_VTR1_PAD_MON = 0xa0c0cc2,
	
ECIA_DIR_INT_SRC_VTR1_PAD_MON = 0x8a0c0cc2L,
	
ECIA_AGG_INT_SRC_VTR2_PAD_MON = 0xb0c0cc3,
	
ECIA_DIR_INT_SRC_VTR2_PAD_MON = 0x8b0c0cc3L,
	
ECIA_AGG_INT_SRC_WDT = 0x20d0dab,
	
ECIA_DIR_INT_SRC_WDT = 0x820d0dabL,
	
ECIA_AGG_INT_SRC_EMC = 0x180d0d86,
	
ECIA_DIR_INT_SRC_EMC = 0x980d0d86L,
	
ECIA_AGG_INT_SRC_TIMER32_0 = 0x40f0e8c,
	
ECIA_DIR_INT_SRC_TIMER32_0 = 0x840f0e8cL,
	
ECIA_AGG_INT_SRC_TIMER32_1 = 0x50f0e8d,
	
ECIA_DIR_INT_SRC_TIMER32_1 = 0x850f0e8dL,
	
ECIA_AGG_INT_SRC_RTMR = 0xa0f0e6f,
	
ECIA_DIR_INT_SRC_RTMR = 0x8a0f0e6fL,
	
ECIA_AGG_INT_SRC_SWI0 = 0xb0f0eb5,
	
ECIA_DIR_INT_SRC_SWI0 = 0x8b0f0eb5L,
	
ECIA_AGG_INT_SRC_SWI1 = 0xc0f0eb6,
	
ECIA_DIR_INT_SRC_SWI1 = 0x8c0f0eb6L,
	
ECIA_AGG_INT_SRC_SWI2 = 0xd0f0eb7,
	
ECIA_DIR_INT_SRC_SWI2 = 0x8d0f0eb7L,
	
ECIA_AGG_INT_SRC_SWI3 = 0xe0f0eb8,
	
ECIA_DIR_INT_SRC_SWI3 = 0x8e0f0eb8L,
	
ECIA_AGG_INT_SRC_HTMR0 = 0x100f0e70,
	
ECIA_DIR_INT_SRC_HTMR0 = 0x900f0e70L,
	
ECIA_AGG_INT_SRC_HTMR1 = 0x110f0e71,
	
ECIA_DIR_INT_SRC_HTMR1 = 0x910f0e71L,
	
ECIA_AGG_INT_SRC_SPIMON0_VLTN = 0x100fbc,
	
ECIA_DIR_INT_SRC_SPIMON0_VLTN = 0x80100fbcL,
	
ECIA_AGG_INT_SRC_SPIMON0_MTMON = 0x1100fbd,
	
ECIA_DIR_INT_SRC_SPIMON0_MTMON = 0x81100fbdL,
	
ECIA_AGG_INT_SRC_SPIMON0_LTMON = 0x2100fbe,
	
ECIA_DIR_INT_SRC_SPIMON0_LTMON = 0x82100fbeL,
	
ECIA_AGG_INT_SRC_SPIMON1_VLTN = 0x4100fbf,
	
ECIA_DIR_INT_SRC_SPIMON1_VLTN = 0x84100fbfL,
	
ECIA_AGG_INT_SRC_SPIMON1_MTMON = 0x5100fc0,
	
ECIA_DIR_INT_SRC_SPIMON1_MTMON = 0x85100fc0L,
	
ECIA_AGG_INT_SRC_SPIMON1_LTMON = 0x6100fc1,
	
ECIA_DIR_INT_SRC_SPIMON1_LTMON = 0x86100fc1L,
	
ECIA_AGG_INT_SRC_GPIO250 = 0x8121100,
	
ECIA_AGG_INT_SRC_GPIO253 = 0xb121100,
	

}ECIA_INT_SOURCE;

typedef enum
{
    ECIA_GIRQ_BLOCK_NUM8 = 8,
    ECIA_GIRQ_BLOCK_NUM9 = 9,
    ECIA_GIRQ_BLOCK_NUM10 = 10,
    ECIA_GIRQ_BLOCK_NUM11 = 11,
    ECIA_GIRQ_BLOCK_NUM12 = 12,
    ECIA_GIRQ_BLOCK_NUM13 = 13,
    ECIA_GIRQ_BLOCK_NUM14 = 14,
    ECIA_GIRQ_BLOCK_NUM15 = 15,
    ECIA_GIRQ_BLOCK_NUM16 = 16,
    ECIA_GIRQ_BLOCK_NUM17 = 17,
    ECIA_GIRQ_BLOCK_NUM18 = 18,
    ECIA_GIRQ_BLOCK_NUM19 = 19,
    ECIA_GIRQ_BLOCK_NUM20 = 20,
    ECIA_GIRQ_BLOCK_NUM21 = 21,
    ECIA_GIRQ_BLOCK_NUM22 = 22,
    ECIA_GIRQ_BLOCK_NUM23 = 23,
    ECIA_GIRQ_BLOCK_NUM24 = 24,
    ECIA_GIRQ_BLOCK_NUM25 = 25,
    ECIA_GIRQ_BLOCK_NUM26 = 26,
    ECIA_GIRQ_BLOCK_NUM_MAX
}ECIA_GIRQ_BLOCK_NUM;

#define INT_SRC_IS_AGGREGATE                0U
#define INT_SRC_IS_DIRECT                   1U
#define GIRQ_DIR_INT_NUM_GET(int_src)       (((uint32_t)(int_src)) & (uint32_t)0xFF)
#define GIRQ_AGG_INT_NUM_GET(int_src)       ((((uint32_t)(int_src)) & ((uint32_t)0xFF << 8U)) >> 8U)
#define GIRQ_REG_GET(int_src)               ((((uint32_t)(int_src)) & ((uint32_t)0xFF << 16U)) >> 16U)
#define GIRQ_BIT_POS_GET(int_src)           ((((uint32_t)(int_src)) & ((uint32_t)0x1F << 24U)) >> 24U)
#define IS_INT_SRC_AGG_OR_DIR(int_src)      ((((uint32_t)(int_src)) & ((uint32_t)0x01 << 31U)) >> 31U)

void ECIA_Initialize(void);
void ECIA_GIRQBlockEnable(ECIA_GIRQ_BLOCK_NUM block);
void ECIA_GIRQBlockDisable(ECIA_GIRQ_BLOCK_NUM block);
void ECIA_GIRQBlockDisableAll(void);
uint32_t ECIA_GIRQBlockStatusGet(ECIA_GIRQ_BLOCK_NUM block);
void ECIA_GIRQSourceEnable(ECIA_INT_SOURCE int_src);
void ECIA_GIRQSourceDisable(ECIA_INT_SOURCE int_src);
void ECIA_GIRQSourceClear(ECIA_INT_SOURCE int_src);
void ECIA_GIRQSourceClearAll(void);
void ECIA_GIRQSourceDisableAll(void);
void ECIA_InterruptEnable(ECIA_INT_SOURCE int_src);
void ECIA_InterruptDisable(ECIA_INT_SOURCE int_src);
uint8_t ECIA_GIRQResultGet(ECIA_INT_SOURCE int_src);
bool ECIA_GIRQIsInterruptEnabled(ECIA_INT_SOURCE int_src);




// DOM-IGNORE-BEGIN
#ifdef __cplusplus  // Provide C++ Compatibility

    }

#endif
// DOM-IGNORE-END
#endif // PLIB_NVIC_H
